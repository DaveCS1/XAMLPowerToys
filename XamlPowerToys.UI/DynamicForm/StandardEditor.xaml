<UserControl x:Class="XamlPowerToys.UI.DynamicForm.StandardEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dynamicForm="clr-namespace:XamlPowerToys.UI.DynamicForm"
             xmlns:validationRules="clr-namespace:XamlPowerToys.UI.ValidationRules"
             xmlns:converters="clr-namespace:XamlPowerToys.UI.Converters">
    <UserControl.Resources>
                <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
                <converters:BindingModeEnumConverter x:Key="bindingModeEnumConverter"/>
    </UserControl.Resources>
    <StackPanel>
        <Grid Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="175"/>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Text="Binding Mode" />
            <ComboBox Grid.Column="1"
                      IsEnabled="{Binding Path=IsBindingModeSelectionEnabled}"
                      Width="165"
                      HorizontalAlignment="Left"
                      ItemsSource="{Binding Path=BindingModes}"
                      SelectedValue="{Binding Path=BindingMode, Mode=TwoWay, Converter={StaticResource bindingModeEnumConverter}}" />

            <TextBlock Grid.Column="2" Text="Control Width" />
            <TextBox Grid.Column="3" Width="75" HorizontalAlignment="Left">
                <TextBox.Text>
                    <Binding Path="Width" Mode="TwoWay" StringFormat="{}{0:D}" TargetNullValue="" ValidatesOnDataErrors="True" ValidatesOnExceptions="True" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <validationRules:PositiveIntegerValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <StackPanel Grid.Column="4" Orientation="Horizontal">
                <TextBlock Text="Control Height" Width="80"/>
                <TextBox Width="75" Margin="5,0,0,0">
                    <TextBox.Text>
                        <Binding Path="Height" Mode="TwoWay" StringFormat="{}{0:D}" TargetNullValue="" ValidatesOnDataErrors="True" ValidatesOnExceptions="True" UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <validationRules:PositiveIntegerValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>

            <StackPanel Visibility="{Binding Path=ShowStringFormatProperty, Converter={StaticResource booleanToVisibilityConverter}}" Grid.Column="5" Margin="15,0,5,0" Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock Text="Format" />
                <TextBox Margin="5,0,0,0" Width="100" Text="{Binding Path=StringFormat, Mode=TwoWay}"/>
            </StackPanel>

        </Grid>

        <Grid Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="175"/>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Text="Control Label" />
            <TextBox Grid.Column="1" Text="{Binding Path=LabelText, Mode=TwoWay}" HorizontalAlignment="Left" Width="165"/>

            <TextBlock Grid.Column="2" Text="Label Width" />
            <TextBox Grid.Column="3" Width="75" HorizontalAlignment="Left">
                <TextBox.Text>
                    <Binding Path="LabelWidth" Mode="TwoWay" StringFormat="{}{0:D}" TargetNullValue="" ValidatesOnDataErrors="True" ValidatesOnExceptions="True" UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <validationRules:PositiveIntegerValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <CheckBox Grid.Column="4" Content="Show Label" IsChecked="{Binding Path=ShowLabel, Mode=TwoWay}"/>

            <StackPanel Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type dynamicForm:CreateFormView}}, Path=DataContext.GenerateFormModel.ShowTableSectionTitle, Converter={StaticResource booleanToVisibilityConverter}}" Grid.Column="5" Margin="15,0,5,0" Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock Text="Table Section Title" />
                <TextBox Margin="5,0,0,0" Width="100">
                    <TextBox.Style>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="TextBox.Text" Value="CHANGE">
                                    <Setter Property="TextBox.Foreground" Value="Red"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding Path="TableSectionTitle" Mode="TwoWay" ValidatesOnDataErrors="True" ValidatesOnExceptions="True" UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <validationRules:RequiredEntryValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>
        </Grid>

        <ContentControl KeyboardNavigation.IsTabStop="False" x:Name="controlSpecificContent"/>

        <Grid Margin="0,10,0,0" Visibility="{Binding Path=DataContext.ShowExpandAdvancedOptions, Converter={StaticResource booleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type dynamicForm:CreateFormView}}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="175"/>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <CheckBox Grid.Column="0" Grid.ColumnSpan="2" Margin="0,10,0,0" Content="Include Next Control In Row" IsChecked="{Binding Path=IncludeNextControlInRow, Mode=TwoWay}"/>
            <TextBlock Grid.Column="2" Margin="0,10,0,0" Text="Row Item Width" />
            <TextBox Grid.Column="3" Text="{Binding Path=CellWidthText, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True, TargetNullValue=''}" Margin="0,10,0,0" Width="75" HorizontalAlignment="Left"/>

            <TextBlock Margin="0,10,0,0" Text="Converter" Grid.Row="1" ToolTip="Select the binding converter required for this property."/>
            <ComboBox Grid.Column="1"
                      Grid.Row="1"
                      Margin="0,10,0,0"
                      ToolTip="Select the binding converter required for this property."
                      Width="165"
                      HorizontalAlignment="Left"
                      ItemsSource="{Binding Path=DataContext.AvailableConverters, RelativeSource={RelativeSource AncestorType={x:Type dynamicForm:CreateFormView}}}"
                      SelectedValue="{Binding Path=BindingConverter, Mode=TwoWay}" />
        </Grid>
    </StackPanel>
</UserControl>
