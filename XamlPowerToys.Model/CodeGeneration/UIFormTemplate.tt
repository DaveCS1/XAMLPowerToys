<#@ template language="C#" #>
<#@ output extension=".xaml" encoding="utf-8" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Windows" #>
<#@ import namespace="System.Windows.Controls" #>
<# 
	if (this.Model.WrapGeneratedCodeInBorder) {
		WriteLine(this.Model.BorderHelper.StartTag());
    }

	WriteLine(this.Model.RootControlStartTag);

	WriteLine(this.Model.FormHeader);

	var index = 0;
    foreach (var columnSet in this.Model.FormComponentModelCollection) {
		WriteLine(this.Model.MakeColumnRootControlStartTag(index));

		if (this.Model.ColumnRootObject == RootObject.TableView) {
			WriteLine(this.Model.TableRootHelper.StartTag());
        }

		Int32? currentRootRow = null;
		if (this.Model.ColumnRootObject == RootObject.Grid) {
			currentRootRow = 0;	
        }

		var lastTableSectionTitle = String.Empty;
	
		foreach (var formComponentModel in columnSet) {
				
			// skip items that will be rendered on same row with another control
			if (formComponentModel.RenderOnSharedRow) {
				continue;
			}

			if (this.Model.ColumnRootObject == RootObject.TableView) {
				// start a new table section
				if (lastTableSectionTitle != formComponentModel.TableSectionTitle) {
					// if not the first table section, write closing table section tag
					if (!String.IsNullOrWhiteSpace(lastTableSectionTitle)) {
						WriteLine(this.Model.TableSectionHelper.EndTag());
                    }
					
					WriteLine(this.Model.TableSectionHelper.StartTag(formComponentModel.TableSectionTitle));

					lastTableSectionTitle = formComponentModel.TableSectionTitle;
                }
            }

			// when requested write label above control
			if (this.Model.LabelPosition == LabelPosition.Top && formComponentModel.ShowLabel) {
				WriteLine(this.Model.LabelHelper.MakeTag(formComponentModel.LabelText, formComponentModel.LabelImageName, formComponentModel.LabelWidthText, null, currentRootRow));
				if (this.Model.ColumnRootObject == RootObject.Grid) {
					currentRootRow += 1;	
				}
			}

			// column root = stack layout && control layout is grid
			if (formComponentModel.ColumnRootObject == RootObject.StackLayout && formComponentModel.ControlLayoutRoot == RootObject.Grid) {
				var currentColumn = 0;
				var currentInnerGridColumn = 0;
				var componentColumns = new List<GridLength>();

				if (!formComponentModel.IncludeNextControlInRow || this.Model.LabelPosition == LabelPosition.Left) {
					componentColumns.Add(new GridLength(85));
                }
				if (formComponentModel.IncludeNextControlInRow && formComponentModel.CellWidthGridLength.HasValue) {
					componentColumns.Add(formComponentModel.CellWidthGridLength.Value);
                } else {
					componentColumns.Add(new GridLength(1, GridUnitType.Star));
                }
				
				componentColumns.AddRange(formComponentModel.SameRowFormComponentModelsColumns);

				WriteLine(this.Model.GridHelper.StartTag(componentColumns, null, currentColumn, currentRootRow));
				if (this.Model.ColumnRootObject == RootObject.Grid) {
					currentRootRow += 1;	
				}

				if (this.Model.LabelPosition == LabelPosition.Left && formComponentModel.ShowLabel) {
					WriteLine(this.Model.LabelHelper.MakeTag(formComponentModel.LabelText, formComponentModel.LabelImageName, formComponentModel.LabelWidthText, 0, 0));
					currentInnerGridColumn += 1;
				}
								
				WriteLine(formComponentModel.ControlFactory.MakeControl(currentInnerGridColumn));	
				currentInnerGridColumn += 1;

				foreach (var item in formComponentModel.SameRowFormComponentModels) {
					if (item.ShowLabel) {
						WriteLine(this.Model.LabelHelper.MakeTag(item.LabelText, item.LabelImageName, item.LabelWidthText, currentInnerGridColumn, null));
						currentInnerGridColumn += 1;
					}

					WriteLine(item.ControlFactory.MakeControl(currentInnerGridColumn));	
					currentInnerGridColumn += 1;
				}

				WriteLine(this.Model.GridHelper.EndTag());

			// column root = grid layout && control layout is grid
            } else if (formComponentModel.ColumnRootObject == RootObject.Grid && formComponentModel.ControlLayoutRoot == RootObject.Grid) {
				
				var currentColumn = 0;
				var currentInnerGridColumn = 0;
				var componentColumns = new List<GridLength>();

				if (!formComponentModel.IncludeNextControlInRow) {
					componentColumns.Add(new GridLength(85));
                }
				if (formComponentModel.IncludeNextControlInRow && formComponentModel.CellWidthGridLength.HasValue) {
					componentColumns.Add(formComponentModel.CellWidthGridLength.Value);
                } else {
					componentColumns.Add(new GridLength(1, GridUnitType.Star));
                }
				
				componentColumns.AddRange(formComponentModel.SameRowFormComponentModelsColumns);
				
				if (this.Model.LabelPosition == LabelPosition.Left && formComponentModel.ShowLabel && formComponentModel.IncludeNextControlInRow) {
					WriteLine(this.Model.LabelHelper.MakeTag(formComponentModel.LabelText, formComponentModel.LabelImageName, formComponentModel.LabelWidthText, 0, currentRootRow));
					currentColumn += 1;
				}

				WriteLine(this.Model.GridHelper.StartTag(componentColumns, null, currentColumn, currentRootRow));
				if (this.Model.ColumnRootObject == RootObject.Grid) {
					currentRootRow += 1;	
				}

				if (this.Model.LabelPosition == LabelPosition.Left && formComponentModel.ShowLabel && !formComponentModel.IncludeNextControlInRow) {
					WriteLine(this.Model.LabelHelper.MakeTag(formComponentModel.LabelText, formComponentModel.LabelImageName, formComponentModel.LabelWidthText, 0, 0));
					currentInnerGridColumn += 1;
				}
								
				WriteLine(formComponentModel.ControlFactory.MakeControl(currentInnerGridColumn));	
				currentInnerGridColumn += 1;

				foreach (var item in formComponentModel.SameRowFormComponentModels) {
					if (item.ShowLabel) {
						WriteLine(this.Model.LabelHelper.MakeTag(item.LabelText, item.LabelImageName, item.LabelWidthText, currentInnerGridColumn, null));
						currentInnerGridColumn += 1;
					}

					WriteLine(item.ControlFactory.MakeControl(currentInnerGridColumn));	
					currentInnerGridColumn += 1;
				}

				WriteLine(this.Model.GridHelper.EndTag());

			// column root = table view && control layout is grid
            } else if (formComponentModel.ColumnRootObject == RootObject.TableView && formComponentModel.ControlLayoutRoot == RootObject.Grid) {
				WriteLine(this.Model.ViewCellHelper.StartTag());
						
				var currentColumn = 0;
				var currentInnerGridColumn = 0;
				var componentColumns = new List<GridLength>();

				//if (!formComponentModel.IncludeNextControlInRow) {
				//	componentColumns.Add(new GridLength(85));
                //}

				componentColumns.Add(new GridLength(85));

				if (formComponentModel.IncludeNextControlInRow && formComponentModel.CellWidthGridLength.HasValue) {
					componentColumns.Add(formComponentModel.CellWidthGridLength.Value);
                } else {
					componentColumns.Add(new GridLength(1, GridUnitType.Star));
                }
				
				componentColumns.AddRange(formComponentModel.SameRowFormComponentModelsColumns);

				WriteLine(this.Model.GridHelper.StartTag(componentColumns, null, currentColumn, currentRootRow));
				if (this.Model.ColumnRootObject == RootObject.Grid) {
					currentRootRow += 1;	
				}

				if (this.Model.LabelPosition == LabelPosition.Left && formComponentModel.ShowLabel) {
					WriteLine(this.Model.LabelHelper.MakeTag(formComponentModel.LabelText, formComponentModel.LabelImageName, formComponentModel.LabelWidthText, 0, 0));
					currentInnerGridColumn += 1;
				}
								
				WriteLine(formComponentModel.ControlFactory.MakeControl(currentInnerGridColumn));	
				currentInnerGridColumn += 1;

				foreach (var item in formComponentModel.SameRowFormComponentModels) {
					if (item.ShowLabel) {
						WriteLine(this.Model.LabelHelper.MakeTag(item.LabelText, item.LabelImageName, item.LabelWidthText, currentInnerGridColumn, null));
						currentInnerGridColumn += 1;
					}

					WriteLine(item.ControlFactory.MakeControl(currentInnerGridColumn));	
					currentInnerGridColumn += 1;
				}

				WriteLine(this.Model.GridHelper.EndTag());

				WriteLine(this.Model.ViewCellHelper.EndTag());
											
			// render control with out row wrapping control, 
			} else {
				if (this.Model.LabelPosition == LabelPosition.Left && formComponentModel.ShowLabel) {
					WriteLine(this.Model.LabelHelper.MakeTag(formComponentModel.LabelText, String.Empty, formComponentModel.LabelWidthText, null, currentRootRow));
					WriteLine(formComponentModel.ControlFactory.MakeControl(1, currentRootRow));	
				} else {
					WriteLine(formComponentModel.ControlFactory.MakeControl(null, currentRootRow));	
                }
				
				if (this.Model.ColumnRootObject == RootObject.Grid) {
					currentRootRow += 1;	
				}
			}
				
			// when requested write label below control
			if (this.Model.LabelPosition == LabelPosition.Bottom && formComponentModel.ShowLabel) {
				WriteLine(this.Model.LabelHelper.MakeTag(formComponentModel.LabelText, String.Empty, formComponentModel.LabelWidthText, null, currentRootRow));
				if (this.Model.ColumnRootObject == RootObject.Grid) {
					currentRootRow += 1;	
				}
			}	
        }

		// close last table section and the table root
		if (this.Model.ColumnRootObject == RootObject.TableView) {
			WriteLine(this.Model.TableSectionHelper.EndTag());

			WriteLine(this.Model.TableRootHelper.EndTag());
        }

		WriteLine(this.Model.ColumnRootControlEndTag);
		index += 1;
    }

	WriteLine(this.Model.RootControlEndTag);

	if (this.Model.WrapGeneratedCodeInBorder) {
		WriteLine(this.Model.BorderHelper.EndTag());
    }
 #>